#BlueJ class context
comment0.params=
comment0.target=Picture()
comment0.text=\r\n\ Constructor\ that\ takes\ no\ arguments\ \r\n
comment1.params=fileName
comment1.target=Picture(java.lang.String)
comment1.text=\r\n\ Constructor\ that\ takes\ a\ file\ name\ and\ creates\ the\ picture\ \r\n\ @param\ fileName\ the\ name\ of\ the\ file\ to\ create\ the\ picture\ from\r\n
comment10.params=
comment10.target=void\ negate()
comment10.text=Method\ that\ negates\ the\ colors\ in\ the\ picture
comment11.params=
comment11.target=void\ grayscale()
comment11.text=Method\ that\ makes\ the\ picture\ all\ shades\ of\ gray
comment12.params=
comment12.target=void\ fixUnderwater()
comment12.text=\r\n\ Method\ to\ fix\ pictures\ taken\ underwater\r\n
comment13.params=
comment13.target=void\ mirrorVertical()
comment13.text=\ Method\ that\ mirrors\ the\ picture\ around\ a\ \r\n\ vertical\ mirror\ in\ the\ center\ of\ the\ picture\r\nfrom\ left\ to\ right
comment14.params=
comment14.target=void\ mirrorVerticalRightToLeft()
comment14.text=\ Method\ that\ mirrors\ the\ picture\ around\ a\ \r\n\ vertical\ mirror\ in\ the\ center\ of\ the\ picture\r\nfrom\ right\ to\ left
comment15.params=
comment15.target=void\ mirrorHorizontal()
comment15.text=\ Method\ that\ mirrors\ the\ picture\ around\ a\ \r\n\ horizontal\ mirror\ in\ the\ center\ of\ the\ picture\r\nfrom\ top\ to\ botttom
comment16.params=
comment16.target=void\ mirrorHorizontalBotToTop()
comment16.text=\ Method\ that\ mirrors\ the\ picture\ around\ a\ \r\n\ horizontal\ mirror\ in\ the\ center\ of\ the\ picture\r\nfrom\ bottom\ to\ top
comment17.params=
comment17.target=void\ mirrorDiagonal()
comment17.text=\ Mirror\ around\ a\ mirror\ positioned\ on\ the\ diagonal\ line\r\n\ from\ bottom\ left\ to\ top\ right\r\n
comment18.params=
comment18.target=void\ mirrorTemple()
comment18.text=Mirror\ just\ part\ of\ a\ picture\ of\ a\ temple
comment19.params=
comment19.target=void\ mirrorArms()
comment19.text=Mirror\ just\ part\ of\ a\ picture\ of\ a\ snowman
comment2.params=height\ width
comment2.target=Picture(int,\ int)
comment2.text=\r\n\ Constructor\ that\ takes\ the\ width\ and\ height\r\n\ @param\ height\ the\ height\ of\ the\ desired\ picture\r\n\ @param\ width\ the\ width\ of\ the\ desired\ picture\r\n
comment20.params=
comment20.target=void\ mirrorGull()
comment20.text=Mirror\ just\ the\ gull
comment21.params=fromPic\ startRow\ startCol
comment21.target=void\ copy(Picture,\ int,\ int)
comment21.text=\ copy\ from\ the\ passed\ fromPic\ to\ the\r\n\ specified\ startRow\ and\ startCol\ in\ the\r\n\ current\ picture\r\n\ @param\ fromPic\ the\ picture\ to\ copy\ from\r\n\ @param\ startRow\ the\ start\ row\ to\ copy\ to\r\n\ @param\ startCol\ the\ start\ col\ to\ copy\ to\r\n
comment22.params=
comment22.target=void\ createCollage()
comment22.text=Method\ to\ create\ a\ collage\ of\ several\ pictures
comment23.params=fromPic\ fromStartRow\ fromStartCol\ fromEndRow\ fromEndCol\ toStartRow\ toStartCol
comment23.target=void\ copy(Picture,\ int,\ int,\ int,\ int,\ int,\ int)
comment23.text=\ copy\ from\ the\ passed\ fromPic\ to\ the\r\n\ specified\ startRow\ and\ startCol\ in\ the\r\n\ current\ picture\r\n\ @param\ fromPic\ the\ picture\ to\ copy\ from\r\n\ @param\ fromStartRow\ the\ row\ to\ start\ coping\r\n\ from\ in\ the\ from\ picture\r\n\ @param\ fromStartCol\ the\ column\ to\ start\r\n\ copying\ from\ in\ the\ from\ picture\r\n\ @param\ fromEndRow\ the\ row\ to\ stop\ before\ in\ the\ from\ picture\ \r\n\ @param\ fromEndCol\ the\ column\ to\ stop\ before\ in\ the\ from\ picture\r\n\ @param\ toStartRow\ the\ row\ to\ start\ copying\ to\r\n\ @param\ toStartCol\ the\ column\ to\ start\ copying\ to\r\n
comment24.params=edgeDist
comment24.target=void\ edgeDetection(int)
comment24.text=\ Method\ to\ show\ large\ changes\ in\ color\ \r\n\ @param\ edgeDist\ the\ distance\ for\ finding\ edges\r\n
comment25.params=edgeDist
comment25.target=void\ edgeDetection2(int)
comment25.text=\ Method\ to\ show\ large\ changes\ in\ color\ \r\n\ @param\ edgeDist\ the\ distance\ for\ finding\ edges\r\n
comment26.params=newBack
comment26.target=void\ chromakey(Picture)
comment26.text=\ Method\ to\ replace\ the\ blue\ background\ with\r\n\ the\ pixels\ in\ the\ newBack\ picture\r\n\ @param\ newBack\ the\ picture\ to\ copy\ from\r\n
comment27.params=messagePict
comment27.target=void\ encode(Picture)
comment27.text=\ Hide\ a\ black\ and\ white\ message\ in\ the\ current\r\n\ picture\ by\ changing\ the\ red\ to\ even\ and\ then\r\n\ setting\ it\ to\ odd\ if\ the\ message\ pixel\ is\ black\ \r\n\ @param\ messagePict\ the\ picture\ with\ a\ message\r\n
comment28.params=
comment28.target=Picture\ decode()
comment28.text=\r\n\ Method\ to\ decode\ a\ message\ hidden\ in\ the\r\n\ red\ value\ of\ the\ current\ picture\r\n\ @return\ the\ picture\ with\ the\ hidden\ message\r\n
comment29.params=value
comment29.target=int\ getCountRedOverValue(int)
comment29.text=\ \r\n\ Method\ to\ return\ the\ count\ of\ the\ number\r\n\ of\ pixels\ with\ a\ red\ value\ greater\ than\r\n\ the\ passed\ value\r\n\ @param\ value\ the\ value\ to\ compare\ to\r\n\ @return\ the\ count\r\n
comment3.params=copyPicture
comment3.target=Picture(Picture)
comment3.text=\r\n\ Constructor\ that\ takes\ a\ picture\ and\ creates\ a\ \r\n\ copy\ of\ that\ picture\r\n\ @param\ copyPicture\ the\ picture\ to\ copy\r\n
comment30.params=
comment30.target=void\ setRedToHalfValueInTopHalf()
comment30.text=\ Method\ to\ set\ the\ red\ in\ the\ top\ half\ of\ the\ picture\r\nto\ half\ the\ original\ value
comment31.params=value
comment31.target=void\ clearBlueOverValue(int)
comment31.text=\ Method\ to\ clear\ the\ blue\ (set\ to\ 0)\ if\ it\ is\ over\ the\ passed\ \r\n\ value\r\n\ @param\ value\ the\ value\ to\ compare\ to\r\n
comment32.params=col
comment32.target=int[]\ getAverageForColumn(int)
comment32.text=\ Method\ to\ return\ the\ average\ value\ for\ the\ specified\ column\r\n\ @param\ col\ the\ column\ index\ to\ get\ the\ average\ from\r\n\ @return\ the\ average\ of\ the\ values\ in\ that\ column\r\n
comment33.params=args
comment33.target=void\ main(java.lang.String[])
comment33.text=\ Main\ method\ for\ testing\ -\ each\ class\ in\ Java\ can\ have\ a\ main\ \r\n\ method\ \r\n
comment4.params=image
comment4.target=Picture(java.awt.image.BufferedImage)
comment4.text=\r\n\ Constructor\ that\ takes\ a\ buffered\ image\r\n\ @param\ image\ the\ buffered\ image\ to\ use\r\n
comment5.params=
comment5.target=java.lang.String\ toString()
comment5.text=\r\n\ Method\ to\ return\ a\ string\ with\ information\ about\ this\ picture.\r\n\ @return\ a\ string\ with\ information\ about\ the\ picture\ such\ as\ fileName,\r\n\ height\ and\ width.\r\n
comment6.params=
comment6.target=void\ zeroBlue()
comment6.text=Method\ to\ set\ the\ blue\ to\ 0
comment7.params=
comment7.target=void\ keepOnlyBlue()
comment7.text=\ Method\ that\ keeps\ only\ the\ blue\ color\ -\ sets\ the\ red\ and\ green\r\nto\ zero
comment8.params=
comment8.target=void\ keepOnlyRed()
comment8.text=Method\ that\ keeps\ only\ the\ red\ color
comment9.params=
comment9.target=void\ keepOnlyGreen()
comment9.text=Method\ that\ keeps\ only\ the\ green\ color
numComments=34
